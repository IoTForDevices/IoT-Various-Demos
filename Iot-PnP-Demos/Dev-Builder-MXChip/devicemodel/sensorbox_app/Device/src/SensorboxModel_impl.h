/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.7.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 20/01/04
 ***********************************************************************************************/

#ifndef SENSORBOXMODEL_IMPL
#define SENSORBOXMODEL_IMPL

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#include "azure_c_shared_utility/xlogging.h"
#include "azure_c_shared_utility/threadapi.h"
#include "parson.h"

#include "IoT_DevKit_HW.h"
#include "pnp_device.h"

/**
* Type definition
*/

/**
* @brief Result of DigitalTwin command execution.
*/
typedef enum DIGITALTWIN_COMMAND_RESULT_TAG
{
    DIGITALTWIN_COMMAND_OK,
    DIGITALTWIN_COMMAND_TIMEOUT,
    DIGITALTWIN_COMMAND_ERROR
} DIGITALTWIN_COMMAND_RESULT;

/**
* Device telemetries related methods.
*/

double EnvironmentalSensor_Telemetry_ReadTemperature();

double EnvironmentalSensor_Telemetry_ReadHumidity();

/**
* Device properties related methods.
*/

bool EnvironmentalSensor_Property_IntervalCallback(int interval);

char* DeviceInfo_Property_GetManufacturer();

char* DeviceInfo_Property_GetModel();

char* DeviceInfo_Property_GetSwVersion();

char* DeviceInfo_Property_GetOsName();

char* DeviceInfo_Property_GetProcessorArchitecture();

char* DeviceInfo_Property_GetProcessorManufacturer();

long DeviceInfo_Property_GetTotalStorage();

long DeviceInfo_Property_GetTotalMemory();

/**
* Device commands related methods.
*/

DIGITALTWIN_COMMAND_RESULT EnvironmentalSensor_Command_Toggle(char** response, unsigned int* statusCode);

// Callbacks to handle the confirmation result of sending telemetry
void SendTelemetry_Succeeded_Callback(const char* interfaceName);
void SendTelemetry_Error_Callback(const char* interfaceName);

// Callbacks to handle the confirmation result of reporting property
void ReportProperty_Succeeded_Callback(const char* interfaceName, const char* propertyName);
void ReportProperty_Error_Callback(const char* interfaceName, const char* propertyName);

#ifdef __cplusplus
}
#endif

#endif // SENSORBOXMODEL_IMPL
